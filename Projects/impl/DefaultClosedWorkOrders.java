package Projects.impl;

import Projects.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultClosedWorkOrders <br>
 * @version generated on Mon Dec 04 20:34:44 COT 2017 by alvarfr
 */
public class DefaultClosedWorkOrders extends WrappedIndividualImpl implements ClosedWorkOrders {

    public DefaultClosedWorkOrders(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Generate
     */
     
    public Collection<? extends Applications> getGenerate() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_GENERATE,
                                               DefaultApplications.class);
    }

    public boolean hasGenerate() {
	   return !getGenerate().isEmpty();
    }

    public void addGenerate(Applications newGenerate) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_GENERATE,
                                       newGenerate);
    }

    public void removeGenerate(Applications oldGenerate) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_GENERATE,
                                          oldGenerate);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Input_for
     */
     
    public Collection<? extends WorkOrders> getInput_for() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_INPUT_FOR,
                                               DefaultWorkOrders.class);
    }

    public boolean hasInput_for() {
	   return !getInput_for().isEmpty();
    }

    public void addInput_for(WorkOrders newInput_for) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_INPUT_FOR,
                                       newInput_for);
    }

    public void removeInput_for(WorkOrders oldInput_for) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_INPUT_FOR,
                                          oldInput_for);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Modified_By
     */
     
    public Collection<? extends Changes> getModified_By() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MODIFIED_BY,
                                               DefaultChanges.class);
    }

    public boolean hasModified_By() {
	   return !getModified_By().isEmpty();
    }

    public void addModified_By(Changes newModified_By) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MODIFIED_BY,
                                       newModified_By);
    }

    public void removeModified_By(Changes oldModified_By) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MODIFIED_BY,
                                          oldModified_By);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Requeriment_Over
     */
     
    public Collection<? extends Applications> getRequeriment_Over() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_REQUERIMENT_OVER,
                                               DefaultApplications.class);
    }

    public boolean hasRequeriment_Over() {
	   return !getRequeriment_Over().isEmpty();
    }

    public void addRequeriment_Over(Applications newRequeriment_Over) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_REQUERIMENT_OVER,
                                       newRequeriment_Over);
    }

    public void removeRequeriment_Over(Applications oldRequeriment_Over) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_REQUERIMENT_OVER,
                                          oldRequeriment_Over);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Support
     */
     
    public Collection<? extends Applications> getSupport() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_SUPPORT,
                                               DefaultApplications.class);
    }

    public boolean hasSupport() {
	   return !getSupport().isEmpty();
    }

    public void addSupport(Applications newSupport) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_SUPPORT,
                                       newSupport);
    }

    public void removeSupport(Applications oldSupport) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_SUPPORT,
                                          oldSupport);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Support_By
     */
     
    public Collection<? extends Analyst> getSupport_By() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_SUPPORT_BY,
                                               DefaultAnalyst.class);
    }

    public boolean hasSupport_By() {
	   return !getSupport_By().isEmpty();
    }

    public void addSupport_By(Analyst newSupport_By) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_SUPPORT_BY,
                                       newSupport_By);
    }

    public void removeSupport_By(Analyst oldSupport_By) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_SUPPORT_BY,
                                          oldSupport_By);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#ApplicationName
     */
     
    public Collection<? extends String> getApplicationName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_APPLICATIONNAME, String.class);
    }

    public boolean hasApplicationName() {
		return !getApplicationName().isEmpty();
    }

    public void addApplicationName(String newApplicationName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_APPLICATIONNAME, newApplicationName);
    }

    public void removeApplicationName(String oldApplicationName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_APPLICATIONNAME, oldApplicationName);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Description
     */
     
    public Collection<? extends String> getDescription() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, String.class);
    }

    public boolean hasDescription() {
		return !getDescription().isEmpty();
    }

    public void addDescription(String newDescription) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, newDescription);
    }

    public void removeDescription(String oldDescription) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, oldDescription);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#Id
     */
     
    public Collection<? extends Integer> getId() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, Integer.class);
    }

    public boolean hasId() {
		return !getId().isEmpty();
    }

    public void addId(Integer newId) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, newId);
    }

    public void removeId(Integer oldId) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, oldId);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#State
     */
     
    public Collection<? extends Boolean> getState() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STATE, Boolean.class);
    }

    public boolean hasState() {
		return !getState().isEmpty();
    }

    public void addState(Boolean newState) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STATE, newState);
    }

    public void removeState(Boolean oldState) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STATE, oldState);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#WorkOrderCreationDate
     */
     
    public Collection<? extends XMLGregorianCalendar> getWorkOrderCreationDate() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERCREATIONDATE, XMLGregorianCalendar.class);
    }

    public boolean hasWorkOrderCreationDate() {
		return !getWorkOrderCreationDate().isEmpty();
    }

    public void addWorkOrderCreationDate(XMLGregorianCalendar newWorkOrderCreationDate) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERCREATIONDATE, newWorkOrderCreationDate);
    }

    public void removeWorkOrderCreationDate(XMLGregorianCalendar oldWorkOrderCreationDate) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERCREATIONDATE, oldWorkOrderCreationDate);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#WorkOrderId
     */
     
    public Collection<? extends Integer> getWorkOrderId() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERID, Integer.class);
    }

    public boolean hasWorkOrderId() {
		return !getWorkOrderId().isEmpty();
    }

    public void addWorkOrderId(Integer newWorkOrderId) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERID, newWorkOrderId);
    }

    public void removeWorkOrderId(Integer oldWorkOrderId) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERID, oldWorkOrderId);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#WorkOrderPriority
     */
     
    public Collection<? extends String> getWorkOrderPriority() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERPRIORITY, String.class);
    }

    public boolean hasWorkOrderPriority() {
		return !getWorkOrderPriority().isEmpty();
    }

    public void addWorkOrderPriority(String newWorkOrderPriority) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERPRIORITY, newWorkOrderPriority);
    }

    public void removeWorkOrderPriority(String oldWorkOrderPriority) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERPRIORITY, oldWorkOrderPriority);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#WorkOrderResolutionDate
     */
     
    public Collection<? extends XMLGregorianCalendar> getWorkOrderResolutionDate() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERRESOLUTIONDATE, XMLGregorianCalendar.class);
    }

    public boolean hasWorkOrderResolutionDate() {
		return !getWorkOrderResolutionDate().isEmpty();
    }

    public void addWorkOrderResolutionDate(XMLGregorianCalendar newWorkOrderResolutionDate) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERRESOLUTIONDATE, newWorkOrderResolutionDate);
    }

    public void removeWorkOrderResolutionDate(XMLGregorianCalendar oldWorkOrderResolutionDate) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERRESOLUTIONDATE, oldWorkOrderResolutionDate);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#WorkOrderState
     */
     
    public Collection<? extends String> getWorkOrderState() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERSTATE, String.class);
    }

    public boolean hasWorkOrderState() {
		return !getWorkOrderState().isEmpty();
    }

    public void addWorkOrderState(String newWorkOrderState) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERSTATE, newWorkOrderState);
    }

    public void removeWorkOrderState(String oldWorkOrderState) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERSTATE, oldWorkOrderState);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/alvarfr/ontologies/2017/11/untitled-ontology-6#WorkOrderSummary
     */
     
    public Collection<? extends String> getWorkOrderSummary() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERSUMMARY, String.class);
    }

    public boolean hasWorkOrderSummary() {
		return !getWorkOrderSummary().isEmpty();
    }

    public void addWorkOrderSummary(String newWorkOrderSummary) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERSUMMARY, newWorkOrderSummary);
    }

    public void removeWorkOrderSummary(String oldWorkOrderSummary) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_WORKORDERSUMMARY, oldWorkOrderSummary);
    }


}
